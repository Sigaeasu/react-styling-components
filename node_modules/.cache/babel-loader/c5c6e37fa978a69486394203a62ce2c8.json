{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\react-styling\\\\src\\\\components\\\\CourseGoals\\\\CourseInput\\\\CourseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../../UI/Button/Button'; // NOTE rename CSS that you want to change into CSS Modules\n\nimport styles from './CourseInput.module.css'; // import './CourseInput.css';\n// const FormControl = styled.div`\n//   margin: 0.5rem 0;\n//   & label {\n//     font-weight: bold;\n//     display: block;\n//     margin-bottom: 0.5rem;\n//     color: ${props => props.invalid ? 'red' : 'black'};\n//   }\n//   & input {\n//     display: block;\n//     width: 100%;\n//     // NOTE Put Dynamic Props on Styled Components based on IsValid true or false\n//     border: 1px solid ${props => props.invalid ? 'red' : 'black'};\n//     background: ${props => props.invalid ? 'ffd7d7' : 'transparent'};\n//     font: inherit;\n//     line-height: 1.5rem;\n//     padding: 0 0.25rem;\n//   }\n//   & input:focus {\n//     outline: none;\n//     background: #fad0ec;\n//     border-color: #8b005d;\n//   }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseInput = props => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n  const goalInputChangeHandler = event => {\n    // NOTE remove blank space, check if there is an value or more\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault(); // NOTE remove blank space, check if there is nothing\n\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n\n    props.onAddGoal(enteredValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `form-control ${!isValid ? 'invalid' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Course Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: goalInputChangeHandler // NOTE Change text box if input is not valid - Dynamic Inline Styles\n\n      /* style={{\n        borderColor: !isValid ? 'red' : '#ccc',\n        backgroundColor: !isValid ? 'salmon' : 'transparent'\n      }} */\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CourseInput, \"Ni07CKV3TMNSLbvOpvFwyLAEJlc=\");\n\n_c = CourseInput;\nexport default CourseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"sources":["C:/laragon/www/react-styling/src/components/CourseGoals/CourseInput/CourseInput.js"],"names":["React","useState","styled","Button","styles","CourseInput","props","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMU,sBAAsB,GAAGC,KAAK,IAAI;AACtC;AACA,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,GAAmC,CAAvC,EAA0C;AACxCN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDF,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAND;;AAQA,QAAMG,iBAAiB,GAAGL,KAAK,IAAI;AACjCA,IAAAA,KAAK,CAACM,cAAN,GADiC,CAEjC;;AACA,QAAGX,YAAY,CAACQ,IAAb,GAAoBC,MAApB,KAA+B,CAAlC,EAAqC;AACnCN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AACDJ,IAAAA,KAAK,CAACa,SAAN,CAAgBZ,YAAhB;AACD,GARD;;AAUA,sBACE;AAAM,IAAA,QAAQ,EAAEU,iBAAhB;AAAA,4BAME;AAAK,MAAA,SAAS,EAAG,gBAAe,CAACR,OAAD,GAAW,SAAX,GAAuB,EAAG;AAA1D;AAAA;AAAA;AAAA;AAAA,YANF,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAWI;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAEE,sBAFZ,CAIE;;AACA;AACV;AACA;AACA;;AARQ;AAAA;AAAA;AAAA;AAAA,YAXJ,eAyBE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAnDD;;GAAMN,W;;KAAAA,W;AAqDN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Button from '../../UI/Button/Button';\n\n// NOTE rename CSS that you want to change into CSS Modules\nimport styles from './CourseInput.module.css';\n// import './CourseInput.css';\n\n// const FormControl = styled.div`\n//   margin: 0.5rem 0;\n\n//   & label {\n//     font-weight: bold;\n//     display: block;\n//     margin-bottom: 0.5rem;\n//     color: ${props => props.invalid ? 'red' : 'black'};\n//   }\n\n//   & input {\n//     display: block;\n//     width: 100%;\n\n//     // NOTE Put Dynamic Props on Styled Components based on IsValid true or false\n//     border: 1px solid ${props => props.invalid ? 'red' : 'black'};\n//     background: ${props => props.invalid ? 'ffd7d7' : 'transparent'};\n\n//     font: inherit;\n//     line-height: 1.5rem;\n//     padding: 0 0.25rem;\n//   }\n\n//   & input:focus {\n//     outline: none;\n//     background: #fad0ec;\n//     border-color: #8b005d;\n//   }\n// `;\n\nconst CourseInput = props => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true)\n\n  const goalInputChangeHandler = event => {\n    // NOTE remove blank space, check if there is an value or more\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true)\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    // NOTE remove blank space, check if there is nothing\n    if(enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n\n      {/* NOTE Check line 21 */}\n      {/* <FormControl invalid={!isValid}> */}\n\n      {/* NOTE Change text color and text box if input is not valid - Dynamic CSS Classes*/}\n      <div className={`form-control ${!isValid ? 'invalid' : ''}`}></div>\n\n        {/* NOTE Change text color if input is not valid - Dynamic Inline Styles*/}\n        <label /* style={{color: !isValid ? 'red' : 'black'}} */>Course Goal</label>\n\n        <input \n          type=\"text\" \n          onChange={goalInputChangeHandler} \n\n          // NOTE Change text box if input is not valid - Dynamic Inline Styles\n          /* style={{\n            borderColor: !isValid ? 'red' : '#ccc',\n            backgroundColor: !isValid ? 'salmon' : 'transparent'\n          }} */\n\n        />\n      \n      {/* </FormControl> */}\n\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"]},"metadata":{},"sourceType":"module"}