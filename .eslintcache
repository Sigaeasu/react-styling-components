[{"C:\\laragon\\www\\styling-react-component\\src\\index.js":"1","C:\\laragon\\www\\styling-react-component\\src\\App.js":"2","C:\\laragon\\www\\styling-react-component\\src\\components\\CourseGoals\\CourseGoalList\\CourseGoalList.js":"3","C:\\laragon\\www\\styling-react-component\\src\\components\\CourseGoals\\CourseInput\\CourseInput.js":"4","C:\\laragon\\www\\styling-react-component\\src\\components\\CourseGoals\\CourseGoalItem\\CourseGoalItem.js":"5","C:\\laragon\\www\\styling-react-component\\src\\components\\UI\\Button\\Button.js":"6"},{"size":169,"mtime":1616593574000,"results":"7","hashOfConfig":"8"},{"size":1533,"mtime":1624674191623,"results":"9","hashOfConfig":"8"},{"size":461,"mtime":1616593574000,"results":"10","hashOfConfig":"8"},{"size":2575,"mtime":1624638916974,"results":"11","hashOfConfig":"8"},{"size":393,"mtime":1616593574000,"results":"12","hashOfConfig":"8"},{"size":1097,"mtime":1624637807433,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15vqe0d",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},"C:\\laragon\\www\\styling-react-component\\src\\index.js",[],"C:\\laragon\\www\\styling-react-component\\src\\App.js",[],"C:\\laragon\\www\\styling-react-component\\src\\components\\CourseGoals\\CourseGoalList\\CourseGoalList.js",[],["29","30"],"C:\\laragon\\www\\styling-react-component\\src\\components\\CourseGoals\\CourseInput\\CourseInput.js",["31"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Button from '../../UI/Button/Button';\n\n// NOTE rename CSS that you want to change into CSS Modules\nimport styles from './CourseInput.module.css';\n// import './CourseInput.css';\n\n// NOTE Styled Components\n// const FormControl = styled.div`\n//   margin: 0.5rem 0;\n\n//   & label {\n//     font-weight: bold;\n//     display: block;\n//     margin-bottom: 0.5rem;\n//     color: ${props => (props.invalid ? 'red' : 'black') };\n//   }\n\n//   & input {\n//     display: block;\n//     width: 100%;\n//     border: 1px solid ${props => (props.invalid ? 'red' : '#ccc') };\n//     background: ${props => (props.invalid ? 'ffd7d7' : 'transparent') };\n//     font: inherit;\n//     line-height: 1.5rem;\n//     padding: 0 0.25rem;\n//   }\n\n//   & input:focus {\n//     outline: none;\n//     background: #fad0ec;\n//     border-color: #8b005d;\n//   }\n// `;\n\nconst CourseInput = props => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true)\n\n  const goalInputChangeHandler = event => {\n    // NOTE remove blank space, check if there is an value or more\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true)\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    // NOTE remove blank space, check if there is nothing\n    if(enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n\n      {/* NOTE Dynamic Styled Components*/}\n      {/* <FormControl invalid={!isValid}> */}\n\n      {/* NOTE Dynamic CSS Classes*/}\n      {/* <div className={`form-control ${!isValid ? 'invalid' : ''}`}> */}\n\n      {/* NOTE  */}\n      <div className={\n        `${styles['form-control']}\n        ${!isValid && styles.invalid}` \n      }>\n\n        {/* NOTE Change text color if input is not valid - Dynamic Inline Styles*/}\n        <label /* style={{color: !isValid ? 'red' : 'black'}} */>Course Goal</label>\n\n        <input \n          type=\"text\" \n          onChange={goalInputChangeHandler} \n\n          // NOTE Change text box if input is not valid - Dynamic Inline Styles\n          /* style={{\n            borderColor: !isValid ? 'red' : '#ccc',\n            backgroundColor: !isValid ? 'salmon' : 'transparent'\n          }} */\n\n        />\n\n      </div>\n\n      {/* </FormControl> */}\n\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n","C:\\laragon\\www\\styling-react-component\\src\\components\\CourseGoals\\CourseGoalItem\\CourseGoalItem.js",[],"C:\\laragon\\www\\styling-react-component\\src\\components\\UI\\Button\\Button.js",["32"],"import React from 'react';\n\n// NOTE rename CSS that you want to change into CSS Modules\nimport styles from './Button.module.css';\n\nimport styled from 'styled-components'\n\n// NOTE Styled components\n// const Button = styled.button`\n//     width: 100%;\n//     font: inherit;\n//     padding: 0.5rem 1.5rem;\n//     border: 1px solid #8b005d;\n//     color: white;\n//     background: #8b005d;\n//     box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//     cursor: pointer;\n\n//     // NOTE use media query to change width to auto if condition met\n//     @media (min-width: 768px) {\n//       width:auto;\n//     }  \n\n//     &:focus {\n//       outline: none;\n//     }\n\n//     &:hover,\n//     &:active {\n//       background: #ac0e77;\n//       border-color: #ac0e77;\n//       box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n//     }\n// `;\n\n// import './Button.css';\n\nconst Button = props => {\n  return (\n    // NOTE Using CSS Modules to rename all CSS Class into unique name\n    <button type={props.type} className={styles.button} onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":14},{"ruleId":"37","severity":1,"message":"38","line":6,"column":8,"nodeType":"39","messageId":"40","endLine":6,"endColumn":14},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]